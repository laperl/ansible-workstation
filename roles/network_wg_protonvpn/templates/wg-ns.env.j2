# /etc/wg-ns/{{ instance.name }}.env
NS={{ instance.name }}

# Par veth
VETH_HOST=veth-{{ instance.name }}     # extremo que se queda en el host
VETH_NS=veth1                          # extremo dentro del netns (evitar 'eth0' por claridad)

# Subred /30 y extremos
SUBNET_P2P={{ instance.subnet_p2p }}
HOST_IP={{ instance.host_ip }}
NS_IP={{ instance.ns_ip }}

# WAN_IF: si vacío, autodetección en preflight (ip route get 1.1.1.1)
WAN_IF={{ instance.wan_if | default('') }}

# WG_IF puede venir vacío -> fallback en el script a 'wg0'
WG_IF={{ instance.wg_if | default('') }}

# Address/DNS: si vienen vacíos en runtime => parsear del .conf original
# Address/DNS desde facts; si vacíos, el script los sacará del DECRYPTED_CONF
WG_ADDR={{ (network_wg_protonvpn_facts[instance.name].wg_addr | default('')) }}
DNS_VPN={{ instance.dns_ns | default(network_wg_protonvpn_facts[instance.name].dns_original | default('')) }}

# Rutas a ficheros de conf
CONF={{ (network_wg_protonvpn_facts[instance.name].purowg_conf | default('')) }}             # conf purificado (wg-quick strip)
DECRYPTED_CONF={{ (network_wg_protonvpn_facts[instance.name].decrypted_conf | default('')) }} # conf original (wg-quick)

# Endpoint: si override vacío => parsear 'Endpoint=' del DECRYPTED_CONF
ENDPOINT_OVERRIDE={{ instance.endpoint_override | default('') }}

# NAT opcional (según tus defaults)
IPTABLES_MANAGE_NAT={{ (network_wg_protonvpn_global.iptables_manage_nat | default(false)) | bool | ternary('1','0') }}
